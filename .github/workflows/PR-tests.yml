# This workflow is used to run the tests when dependabot creates a PR and automatically
# merge the PR.
#
# See https://www.statox.fr/posts/2024/04/github_dependabot_auto_merge/ for companion article
#
# The tests are used as State Checks for the PR
# And the steps trigger the approval of the PR and the setup of the auto-merge setting

name: Test and AutoMerge PRs

on:
    pull_request:
        types: [opened, synchronize, edited]
        branches: [main]
    workflow_dispatch: # Only for tests, to remove

permissions:
    # This is needed to approve the PR
    pull-requests: write
    # This is needed to merge the PR https://github.com/cli/cli/issues/6695#issuecomment-1348430969
    contents: write

jobs:
    lint-and-format:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
              with:
                  ref: ${{ github.head_ref }}

            - name: Install node.js
              uses: actions/setup-node@v5
              with:
                  node-version: 'latest'
                  cache: 'npm'

            - name: Cache node modules
              id: cache-nodemodules
              uses: actions/cache@v4
              env:
                  cache-name: cache-node-modules
              with:
                  # caching node_modules
                  path: node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              if: steps.cache-nodemodules.outputs.cache-hit != 'true'
              run: npm ci

            - name: Check lint
              run: npm run lint

            - name: Check prettier
              run: npm run prettier

    tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
              with:
                  ref: ${{ github.head_ref }}

            - name: Install node.js
              uses: actions/setup-node@v5
              with:
                  node-version: 'latest'
                  cache: 'npm'

            - name: Cache node modules
              id: cache-nodemodules
              uses: actions/cache@v4
              env:
                  cache-name: cache-node-modules
              with:
                  # caching node_modules
                  path: node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              if: steps.cache-nodemodules.outputs.cache-hit != 'true'
              run: npm ci

            - name: Run tests
              run: npm run tests:ci

            - name: Convert junit test report to ctrf
              # node test runner produces junit results we need to convert
              # them for ctrf to publish a comment in the MR
              run: npx junit-to-ctrf tests_results.xml

            - name: Publish CTRF pull request comment
              run: npx github-actions-ctrf pull-request ctrf/ctrf-report.json
              if: always()
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    auto-merge-dependabot:
        # Automatically approve the MR if it was created by dependabot
        # and validates all the tests
        needs: [lint-and-format, tests]
        runs-on: ubuntu-latest
        if: github.actor == 'dependabot[bot]'
        steps:
            - name: Approve the PR
              run: gh pr review --approve "$PR_URL"
              env:
                  PR_URL: ${{github.event.pull_request.html_url}}
                  GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

            - name: Auto merge the PR
              run: gh pr merge --rebase --auto "$PR_URL"
              env:
                  PR_URL: ${{github.event.pull_request.html_url}}
                  GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
